name: Sync Postman Collections

on:
  push:
    branches: [ main ]
    paths:
      - 'collections/**'
      - 'environments/**'

jobs:
  sync-postman:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install -g newman
        npm install -g @postman/newman-reporter-htmlextra
        
    - name: Sync User Service Collection
      env:
        POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        POSTMAN_WORKSPACE_ID: ${{ secrets.POSTMAN_WORKSPACE_ID }}
        POSTMAN_USER_COLLECTION_ID: ${{ secrets.POSTMAN_USER_COLLECTION_ID }}
      run: |
        if [ -f "collections/SmartDrive-User-Service-Collection.json" ]; then
          echo "üîÑ Updating User Service Collection..."
          curl -X PUT \
            -H "X-API-Key: $POSTMAN_API_KEY" \
            -H "Content-Type: application/json" \
            -d @collections/SmartDrive-User-Service-Collection.json \
            "https://api.getpostman.com/collections/$POSTMAN_USER_COLLECTION_ID"
          echo "‚úÖ User Service Collection updated!"
        fi
        
    - name: Sync Auth Service Collection
      env:
        POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        POSTMAN_WORKSPACE_ID: ${{ secrets.POSTMAN_WORKSPACE_ID }}
        POSTMAN_AUTH_COLLECTION_ID: ${{ secrets.POSTMAN_AUTH_COLLECTION_ID }}
      run: |
        if [ -f "collections/SmartDrive-Auth-Service-Collection.json" ]; then
          echo "üîÑ Updating Auth Service Collection..."
          curl -X PUT \
            -H "X-API-Key: $POSTMAN_API_KEY" \
            -H "Content-Type: application/json" \
            -d @collections/SmartDrive-Auth-Service-Collection.json \
            "https://api.getpostman.com/collections/$POSTMAN_AUTH_COLLECTION_ID"
          echo "‚úÖ Auth Service Collection updated!"
        fi
        
    - name: Sync File Storage Collection
      env:
        POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        POSTMAN_WORKSPACE_ID: ${{ secrets.POSTMAN_WORKSPACE_ID }}
        POSTMAN_FILE_STORAGE_COLLECTION_ID: ${{ secrets.POSTMAN_FILE_STORAGE_COLLECTION_ID }}
      run: |
        if [ -f "collections/SmartDrive-File-Storage-Collection.json" ]; then
          echo "üîÑ Updating File Storage Collection..."
          curl -X PUT \
            -H "X-API-Key: $POSTMAN_API_KEY" \
            -H "Content-Type: application/json" \
            -d @collections/SmartDrive-File-Storage-Collection.json \
            "https://api.getpostman.com/collections/$POSTMAN_FILE_STORAGE_COLLECTION_ID"
          echo "‚úÖ File Storage Collection updated!"
        fi
        
    - name: Sync Search Service Collection
      env:
        POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        POSTMAN_WORKSPACE_ID: ${{ secrets.POSTMAN_WORKSPACE_ID }}
        POSTMAN_SEARCH_COLLECTION_ID: ${{ secrets.POSTMAN_SEARCH_COLLECTION_ID }}
      run: |
        if [ -f "collections/SmartDrive-Search-Service-Collection.json" ]; then
          echo "üîÑ Updating Search Service Collection..."
          curl -X PUT \
            -H "X-API-Key: $POSTMAN_API_KEY" \
            -H "Content-Type: application/json" \
            -d @collections/SmartDrive-Search-Service-Collection.json \
            "https://api.getpostman.com/collections/$POSTMAN_SEARCH_COLLECTION_ID"
          echo "‚úÖ Search Service Collection updated!"
        fi
        
    - name: Sync AI Service Collection
      env:
        POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        POSTMAN_WORKSPACE_ID: ${{ secrets.POSTMAN_WORKSPACE_ID }}
        POSTMAN_AI_COLLECTION_ID: ${{ secrets.POSTMAN_AI_COLLECTION_ID }}
      run: |
        if [ -f "collections/SmartDrive-AI-Service-Collection.json" ]; then
          echo "üîÑ Updating AI Service Collection..."
          curl -X PUT \
            -H "X-API-Key: $POSTMAN_API_KEY" \
            -H "Content-Type: application/json" \
            -d @collections/SmartDrive-AI-Service-Collection.json \
            "https://api.getpostman.com/collections/$POSTMAN_AI_COLLECTION_ID"
          echo "‚úÖ AI Service Collection updated!"
        fi
        
    - name: Sync Environment
      env:
        POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        POSTMAN_WORKSPACE_ID: ${{ secrets.POSTMAN_WORKSPACE_ID }}
        POSTMAN_ENVIRONMENT_ID: ${{ secrets.POSTMAN_ENVIRONMENT_ID }}
      run: |
        if [ -f "environments/SmartDrive-Dev-Environment.json" ]; then
          echo "üîÑ Updating Development Environment..."
          if [ ! -z "$POSTMAN_ENVIRONMENT_ID" ]; then
            curl -X PUT \
              -H "X-API-Key: $POSTMAN_API_KEY" \
              -H "Content-Type: application/json" \
              -d @environments/SmartDrive-Dev-Environment.json \
              "https://api.getpostman.com/environments/$POSTMAN_ENVIRONMENT_ID"
            echo "‚úÖ Development Environment updated!"
          else
            echo "‚ö†Ô∏è  No environment ID set, skipping environment update"
          fi
        fi
        
    - name: Notify Success
      if: success()
      run: |
        echo "‚úÖ All Postman collections synced successfully!"
        echo "Updated at: $(date)"
        echo "Collections updated:"
        ls -la collections/*.json 2>/dev/null || echo "No collections found"
        
    - name: Notify Failure
      if: failure()
      run: |
        echo "‚ùå Failed to sync Postman collections"
        echo "Check the logs above for details"
